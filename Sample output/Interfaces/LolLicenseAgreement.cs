//Auto-generated by https://github.com/pipe01/lcu-api-generator
using GlassLCU.API.Models;
using System.Threading.Tasks;
using static GlassLCU.API.GenerationUtils;
using System.Reflection;

namespace GlassLCU.API.Interfaces
{
    public static class LolLicenseAgreement
    {
        /// <summary>
        /// <para>GET /lol-license-agreement/v1/agreements</para>
        /// </summary>
        [Endpoint("/lol-license-agreement/v1/agreements")]
        public static Task<LolLicenseAgreementLicenseAgreement[]> GetLolLicenseAgreementV1Agreements()
            => Sender.Request<LolLicenseAgreementLicenseAgreement[]>("get", $"/lol-license-agreement/v1/agreements");
        /// <summary>
        /// <para>POST /lol-license-agreement/v1/agreements/{id}/accept</para>
        /// </summary>
        [Endpoint("/lol-license-agreement/v1/agreements/{id}/accept")]
        public static Task<object> PostLolLicenseAgreementV1AgreementsByIdAccept([Parameter("id", "path")] string id)
            => Sender.Request<object>("post", $"/lol-license-agreement/v1/agreements/{id}/accept");
        /// <summary>
        /// <para>POST /lol-license-agreement/v1/agreements/{id}/decline</para>
        /// </summary>
        [Endpoint("/lol-license-agreement/v1/agreements/{id}/decline")]
        public static Task<object> PostLolLicenseAgreementV1AgreementsByIdDecline([Parameter("id", "path")] string id)
            => Sender.Request<object>("post", $"/lol-license-agreement/v1/agreements/{id}/decline");
        /// <summary>
        /// <para>GET /lol-license-agreement/v1/all-agreements</para>
        /// </summary>
        [Endpoint("/lol-license-agreement/v1/all-agreements")]
        public static Task<LolLicenseAgreementLicenseAgreement[]> GetLolLicenseAgreementV1AllAgreements()
            => Sender.Request<LolLicenseAgreementLicenseAgreement[]>("get", $"/lol-license-agreement/v1/all-agreements");

        public static string GetURL(string methodName)
        {
            return typeof(LolLicenseAgreement).GetMethod(methodName).GetCustomAttribute<EndpointAttribute>().URL;
        }
    }
}
