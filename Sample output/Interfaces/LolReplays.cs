//Auto-generated by https://github.com/pipe01/lcu-api-generator
using GlassLCU.API.Models;
using System.Threading.Tasks;
using static GlassLCU.API.GenerationUtils;
using System.Reflection;

namespace GlassLCU.API.Interfaces
{
    public static class LolReplays
    {
        /// <summary>
        /// <para>GET /lol-replays/v1/configuration</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/configuration")]
        public static Task<LolReplaysReplaysConfiguration> GetLolReplaysV1Configuration()
            => Sender.Request<LolReplaysReplaysConfiguration>("get", $"/lol-replays/v1/configuration");
        /// <summary>
        /// <para>GET /lol-replays/v1/metadata/{gameId}</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/metadata/{gameId}")]
        public static Task<LolReplaysReplayMetadata> GetLolReplaysV1MetadataByGameId([Parameter("gameId", "path")] long gameId)
            => Sender.Request<LolReplaysReplayMetadata>("get", $"/lol-replays/v1/metadata/{gameId}");
        /// <summary>
        /// <para>POST /lol-replays/v1/metadata/{gameId}/create/gameVersion/{gameVersion}/gameType/{gameType}/queueId/{queueId}</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/metadata/{gameId}/create/gameVersion/{gameVersion}/gameType/{gameType}/queueId/{queueId}")]
        public static Task PostLolReplaysV1MetadataByGameIdCreateGameVersionByGameVersionGameTypeByGameTypeQueueIdByQueueId([Parameter("gameId", "path")] long gameId, [Parameter("gameVersion", "path")] string gameVersion, [Parameter("gameType", "path")] string gameType, [Parameter("queueId", "path")] int queueId)
            => Sender.Request("post", $"/lol-replays/v1/metadata/{gameId}/create/gameVersion/{gameVersion}/gameType/{gameType}/queueId/{queueId}");
        /// <summary>
        /// <para>GET /lol-replays/v1/rofls/path</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/path")]
        public static Task<string> GetLolReplaysV1RoflsPath()
            => Sender.Request<string>("get", $"/lol-replays/v1/rofls/path");
        /// <summary>
        /// <para>GET /lol-replays/v1/rofls/path/default</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/path/default")]
        public static Task<string> GetLolReplaysV1RoflsPathDefault()
            => Sender.Request<string>("get", $"/lol-replays/v1/rofls/path/default");
        /// <summary>
        /// <para>POST /lol-replays/v1/rofls/scan</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/scan")]
        public static Task PostLolReplaysV1RoflsScan()
            => Sender.Request("post", $"/lol-replays/v1/rofls/scan");
        /// <summary>
        /// <para>POST /lol-replays/v1/rofls/{gameId}/download</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/{gameId}/download")]
        public static Task PostLolReplaysV1RoflsByGameIdDownload([Parameter("gameId", "path")] long gameId, [Parameter("contextData", "body")] LolReplaysReplayContextData contextData)
            => Sender.Request("post", $"/lol-replays/v1/rofls/{gameId}/download", contextData);
        /// <summary>
        /// <para>POST /lol-replays/v1/rofls/{gameId}/download/graceful</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/{gameId}/download/graceful")]
        public static Task PostLolReplaysV1RoflsByGameIdDownloadGraceful([Parameter("gameId", "path")] long gameId, [Parameter("contextData", "body")] LolReplaysReplayContextData contextData)
            => Sender.Request("post", $"/lol-replays/v1/rofls/{gameId}/download/graceful", contextData);
        /// <summary>
        /// <para>POST /lol-replays/v1/rofls/{gameId}/watch</para>
        /// </summary>
        [Endpoint("/lol-replays/v1/rofls/{gameId}/watch")]
        public static Task PostLolReplaysV1RoflsByGameIdWatch([Parameter("gameId", "path")] long gameId, [Parameter("contextData", "body")] LolReplaysReplayContextData contextData)
            => Sender.Request("post", $"/lol-replays/v1/rofls/{gameId}/watch", contextData);
        /// <summary>
        /// <para>POST /lol-replays/v2/metadata/{gameId}/create</para>
        /// </summary>
        [Endpoint("/lol-replays/v2/metadata/{gameId}/create")]
        public static Task PostLolReplaysV2MetadataByGameIdCreate([Parameter("gameId", "path")] long gameId, [Parameter("request", "body")] LolReplaysReplayCreateMetadata request)
            => Sender.Request("post", $"/lol-replays/v2/metadata/{gameId}/create", request);

        public static string GetURL(string methodName)
        {
            return typeof(LolReplays).GetMethod(methodName).GetCustomAttribute<EndpointAttribute>().URL;
        }
    }
}
