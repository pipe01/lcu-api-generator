//Auto-generated by https://github.com/pipe01/lcu-api-generator
using GlassLCU.API.Models;
using System.Threading.Tasks;
using static GlassLCU.API.GenerationUtils;
using System.Reflection;

namespace GlassLCU.API.Interfaces
{
    public static class LolPremadeVoice
    {
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/availability</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/availability")]
        public static Task<LolPremadeVoiceVoiceAvailability> GetLolPremadeVoiceV1Availability()
            => Sender.Request<LolPremadeVoiceVoiceAvailability>("get", $"/lol-premade-voice/v1/availability");
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/capturedevices</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/capturedevices")]
        public static Task<LolPremadeVoiceDeviceResource[]> GetLolPremadeVoiceV1Capturedevices()
            => Sender.Request<LolPremadeVoiceDeviceResource[]>("get", $"/lol-premade-voice/v1/capturedevices");
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/capturedevices</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/capturedevices")]
        public static Task PutLolPremadeVoiceV1Capturedevices([Parameter("handle", "body")] string handle)
            => Sender.Request("put", $"/lol-premade-voice/v1/capturedevices", handle);
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/first-experience</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/first-experience")]
        public static Task<LolPremadeVoiceFirstExperience> GetLolPremadeVoiceV1FirstExperience()
            => Sender.Request<LolPremadeVoiceFirstExperience>("get", $"/lol-premade-voice/v1/first-experience");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/first-experience/game</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/first-experience/game")]
        public static Task PostLolPremadeVoiceV1FirstExperienceGame()
            => Sender.Request("post", $"/lol-premade-voice/v1/first-experience/game");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/first-experience/lcu</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/first-experience/lcu")]
        public static Task PostLolPremadeVoiceV1FirstExperienceLcu()
            => Sender.Request("post", $"/lol-premade-voice/v1/first-experience/lcu");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/first-experience/reset</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/first-experience/reset")]
        public static Task PostLolPremadeVoiceV1FirstExperienceReset()
            => Sender.Request("post", $"/lol-premade-voice/v1/first-experience/reset");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/gameClientUpdatedPTTKey</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/gameClientUpdatedPTTKey")]
        public static Task PostLolPremadeVoiceV1GameClientUpdatedPTTKey([Parameter("newKey", "body")] string newKey)
            => Sender.Request("post", $"/lol-premade-voice/v1/gameClientUpdatedPTTKey", newKey);
        /// <summary>
        /// <para>DELETE /lol-premade-voice/v1/mic-test</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/mic-test")]
        public static Task<object> DeleteLolPremadeVoiceV1MicTest()
            => Sender.Request<object>("delete", $"/lol-premade-voice/v1/mic-test");
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/mic-test</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/mic-test")]
        public static Task<LolPremadeVoiceAudioPropertiesResource> GetLolPremadeVoiceV1MicTest()
            => Sender.Request<LolPremadeVoiceAudioPropertiesResource>("get", $"/lol-premade-voice/v1/mic-test");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/mic-test</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/mic-test")]
        public static Task<object> PostLolPremadeVoiceV1MicTest()
            => Sender.Request<object>("post", $"/lol-premade-voice/v1/mic-test");
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/participant-records</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/participant-records")]
        public static Task<LolPremadeVoicePremadeVoiceParticipantDto[]> GetLolPremadeVoiceV1ParticipantRecords()
            => Sender.Request<LolPremadeVoicePremadeVoiceParticipantDto[]>("get", $"/lol-premade-voice/v1/participant-records");
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/participants</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/participants")]
        public static Task<LolPremadeVoicePremadeVoiceParticipantDto[]> GetLolPremadeVoiceV1Participants()
            => Sender.Request<LolPremadeVoicePremadeVoiceParticipantDto[]>("get", $"/lol-premade-voice/v1/participants");
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/participants/{puuid}/mute</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/participants/{puuid}/mute")]
        public static Task PutLolPremadeVoiceV1ParticipantsByPuuidMute([Parameter("puuid", "path")] string puuid, [Parameter("muted", "body")] int muted)
            => Sender.Request("put", $"/lol-premade-voice/v1/participants/{puuid}/mute", muted);
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/participants/{puuid}/volume</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/participants/{puuid}/volume")]
        public static Task PutLolPremadeVoiceV1ParticipantsByPuuidVolume([Parameter("puuid", "path")] string puuid, [Parameter("volume", "body")] int volume)
            => Sender.Request("put", $"/lol-premade-voice/v1/participants/{puuid}/volume", volume);
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/push-to-talk/check-available</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/push-to-talk/check-available")]
        public static Task<bool> PostLolPremadeVoiceV1PushToTalkCheckAvailable([Parameter("prompt", "body")] int prompt)
            => Sender.Request<bool>("post", $"/lol-premade-voice/v1/push-to-talk/check-available", prompt);
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/self/activationSensitivity</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/self/activationSensitivity")]
        public static Task PutLolPremadeVoiceV1SelfActivationSensitivity([Parameter("sensitivity", "body")] int sensitivity)
            => Sender.Request("put", $"/lol-premade-voice/v1/self/activationSensitivity", sensitivity);
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/self/inputMode</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/self/inputMode")]
        public static Task PutLolPremadeVoiceV1SelfInputMode([Parameter("inputMode", "body")] string inputMode)
            => Sender.Request("put", $"/lol-premade-voice/v1/self/inputMode", inputMode);
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/self/micLevel</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/self/micLevel")]
        public static Task PutLolPremadeVoiceV1SelfMicLevel([Parameter("micLevel", "body")] int micLevel)
            => Sender.Request("put", $"/lol-premade-voice/v1/self/micLevel", micLevel);
        /// <summary>
        /// <para>PUT /lol-premade-voice/v1/self/mute</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/self/mute")]
        public static Task PutLolPremadeVoiceV1SelfMute([Parameter("muted", "body")] int muted)
            => Sender.Request("put", $"/lol-premade-voice/v1/self/mute", muted);
        /// <summary>
        /// <para>DELETE /lol-premade-voice/v1/session</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/session")]
        public static Task DeleteLolPremadeVoiceV1Session()
            => Sender.Request("delete", $"/lol-premade-voice/v1/session");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/session</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/session")]
        public static Task PostLolPremadeVoiceV1Session()
            => Sender.Request("post", $"/lol-premade-voice/v1/session");
        /// <summary>
        /// <para>GET /lol-premade-voice/v1/settings</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/settings")]
        public static Task<LolPremadeVoiceSettingsResource> GetLolPremadeVoiceV1Settings()
            => Sender.Request<LolPremadeVoiceSettingsResource>("get", $"/lol-premade-voice/v1/settings");
        /// <summary>
        /// <para>POST /lol-premade-voice/v1/settings/reset</para>
        /// </summary>
        [Endpoint("/lol-premade-voice/v1/settings/reset")]
        public static Task PostLolPremadeVoiceV1SettingsReset()
            => Sender.Request("post", $"/lol-premade-voice/v1/settings/reset");

        public static string GetURL(string methodName)
        {
            return typeof(LolPremadeVoice).GetMethod(methodName).GetCustomAttribute<EndpointAttribute>().URL;
        }
    }
}
