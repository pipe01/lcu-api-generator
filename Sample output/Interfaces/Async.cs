//Auto-generated by https://github.com/pipe01/lcu-api-generator
using GlassLCU.API.Models;
using System.Threading.Tasks;
using static GlassLCU.API.GenerationUtils;
using System.Reflection;

namespace GlassLCU.API.Interfaces
{
    public static class Async
    {
        /// <summary>
        /// Retrieves the result of a completed asynchronous operation.
        /// <para>GET /async/v1/result/{asyncToken}</para>
        /// </summary>
        /// <param name="asyncToken">ID of the asynchronous operation to check</param>
        [Endpoint("/async/v1/result/{asyncToken}")]
        public static Task<object> HttpAsyncResult([Parameter("asyncToken", "path")] int asyncToken)
            => Sender.Request<object>("get", $"/async/v1/result/{asyncToken}");
        /// <summary>
        /// Cancels the asynchronous operation or removes its completion status.
        /// <para>DELETE /async/v1/status/{asyncToken}</para>
        /// </summary>
        /// <param name="asyncToken">ID of the asynchronous operation to remove</param>
        [Endpoint("/async/v1/status/{asyncToken}")]
        public static Task<object> Http2AsyncDelete([Parameter("asyncToken", "path")] int asyncToken)
            => Sender.Request<object>("delete", $"/async/v1/status/{asyncToken}");
        /// <summary>
        /// Retrieves details on the current state of an asynchronous operation.
        /// <para>GET /async/v1/status/{asyncToken}</para>
        /// </summary>
        /// <param name="asyncToken">ID of the asynchronous operation to check</param>
        [Endpoint("/async/v1/status/{asyncToken}")]
        public static Task<object> Http2AsyncStatus([Parameter("asyncToken", "path")] int asyncToken)
            => Sender.Request<object>("get", $"/async/v1/status/{asyncToken}");

        public static string GetURL(string methodName)
        {
            return typeof(Async).GetMethod(methodName).GetCustomAttribute<EndpointAttribute>().URL;
        }
    }
}
