//Auto-generated by https://github.com/pipe01/lcu-api-generator
using GlassLCU.API.Models;
using System.Threading.Tasks;
using static GlassLCU.API.GenerationUtils;
using System.Reflection;

namespace GlassLCU.API.Interfaces
{
    public static class RiotMessagingService
    {
        /// <summary>
        /// <para>DELETE /riot-messaging-service/v1/connect</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/connect")]
        public static Task DeleteRiotMessagingServiceV1Connect()
            => Sender.Request("delete", $"/riot-messaging-service/v1/connect");
        /// <summary>
        /// <para>POST /riot-messaging-service/v1/connect</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/connect")]
        public static Task PostRiotMessagingServiceV1Connect([Parameter("idToken", "body")] string idToken)
            => Sender.Request("post", $"/riot-messaging-service/v1/connect", idToken);
        /// <summary>
        /// <para>DELETE /riot-messaging-service/v1/entitlements</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/entitlements")]
        public static Task DeleteRiotMessagingServiceV1Entitlements()
            => Sender.Request("delete", $"/riot-messaging-service/v1/entitlements");
        /// <summary>
        /// <para>POST /riot-messaging-service/v1/entitlements</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/entitlements")]
        public static Task PostRiotMessagingServiceV1Entitlements([Parameter("token", "body")] RiotMessagingServiceEntitlementsToken token)
            => Sender.Request("post", $"/riot-messaging-service/v1/entitlements", token);
        /// <summary>
        /// <para>POST /riot-messaging-service/v1/reconnect</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/reconnect")]
        public static Task PostRiotMessagingServiceV1Reconnect()
            => Sender.Request("post", $"/riot-messaging-service/v1/reconnect");
        /// <summary>
        /// <para>DELETE /riot-messaging-service/v1/session</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/session")]
        public static Task DeleteRiotMessagingServiceV1Session()
            => Sender.Request("delete", $"/riot-messaging-service/v1/session");
        /// <summary>
        /// <para>GET /riot-messaging-service/v1/session</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/session")]
        public static Task<RiotMessagingServiceSession> GetRiotMessagingServiceV1Session()
            => Sender.Request<RiotMessagingServiceSession>("get", $"/riot-messaging-service/v1/session");
        /// <summary>
        /// <para>GET /riot-messaging-service/v1/state</para>
        /// </summary>
        [Endpoint("/riot-messaging-service/v1/state")]
        public static Task<RiotMessagingServiceState> GetRiotMessagingServiceV1State()
            => Sender.Request<RiotMessagingServiceState>("get", $"/riot-messaging-service/v1/state");

        public static string GetURL(string methodName)
        {
            return typeof(RiotMessagingService).GetMethod(methodName).GetCustomAttribute<EndpointAttribute>().URL;
        }
    }
}
